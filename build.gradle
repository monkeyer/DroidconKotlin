buildscript {
    ext.buildConfig = [
            'compileSdk': 28,
            'minSdk'    : 24,
            'targetSdk' : 27,
            'version'   : [
                    'major': 1,
                    'minor': 2,
                    'patch': 1,
                    'build': 0,
            ],
    ]

    ext.versions = [
            'supportLibrary'       : '27.1.0',
            'kotlin'               : '1.3.20',
            'kotlinCoroutines'     : '1.1.1',
            'multiplatformSettings': '0.2',
            'sqldelight'           : '1.0.3',
            'stately'              : '0.5.2',
            'sqliter'              : '0.5.11',
            'ktor'                 : '1.1.2',
            'serialization'        : '0.10.0',
            'xcode'                : '0.1.2'
    ]

    ext.deps = [
            'kotlin'               : [
                    'stdlib'    : [
                            'common': "org.jetbrains.kotlin:kotlin-stdlib-common:${versions.kotlin}",
                            'jdk'   : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",
                    ],
                    'test'      : [
                            'common'     : "org.jetbrains.kotlin:kotlin-test-common:${versions.kotlin}",
                            'annotations': "org.jetbrains.kotlin:kotlin-test-annotations-common:${versions.kotlin}",
                            'jvm'        : "org.jetbrains.kotlin:kotlin-test:${versions.kotlin}",
                            'junit'      : "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
                            'reflect'    : "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}",
                    ],
                    'coroutines': [
                            'common' : "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:${versions.kotlinCoroutines}",
                            'jdk'    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinCoroutines}",
                            'native' : "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:${versions.kotlinCoroutines}",
                            'android': "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinCoroutines}",
                    ],
            ],
            'multiplatformSettings': "com.russhwolf:multiplatform-settings:${versions.multiplatformSettings}"
            ,
            'sqldelight'           : [
                    'runtime'      : "com.squareup.sqldelight:runtime:${versions.sqldelight}",
                    'runtimeJdk'   : "com.squareup.sqldelight:runtime-jvm:${versions.sqldelight}",
                    'driverIos'    : "com.squareup.sqldelight:ios-driver:${versions.sqldelight}",
                    'driverAndroid': "com.squareup.sqldelight:android-driver:${versions.sqldelight}",
            ]
            ,
            'stately'              : [
                    'mpp': "co.touchlab:stately:${versions.stately}"
            ]
            ,
            'sqliter'              : [
                    'ios': "co.touchlab:sqliter:${versions.sqliter}",
            ]
            ,
            'ktor'                 : [
                    'commonCore' : "io.ktor:ktor-client-core:${versions.ktor}",
                    'commonJson' : "io.ktor:ktor-client-json:${versions.ktor}",
                    'jvmCore'    : "io.ktor:ktor-client-core-jvm:${versions.ktor}",
                    'androidCore': "io.ktor:ktor-client-okhttp:${versions.ktor}",
                    'jvmJson'    : "io.ktor:ktor-client-json-jvm:${versions.ktor}",
                    'ios'        : "io.ktor:ktor-client-ios:${versions.ktor}",
                    'iosCore'    : "io.ktor:ktor-client-core-native:${versions.ktor}",
                    'iosJson'    : "io.ktor:ktor-client-json-native:${versions.ktor}"
            ]
            ,
            'serialization'        : [
                    'commonRuntime': "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:${versions.serialization}",
                    'jvmRuntime'   : "org.jetbrains.kotlinx:kotlinx-serialization-runtime:${versions.serialization}",
                    'iosRuntime'   : "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:${versions.serialization}",
            ]
    ]

    repositories {
        jcenter()
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:${versions.kotlin}"
        classpath 'com.google.gms:google-services:4.2.0'
        classpath "com.squareup.sqldelight:gradle-plugin:${versions.sqldelight}"
        classpath "co.touchlab:kotlinxcodesync:${versions.xcode}"
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://dl.bintray.com/russhwolf/multiplatform-settings" }
    }
}
